{"version":3,"sources":["component/Navbar.js","component/UserList.js","component/ReservationTypeComponent.js","component/ReservationComponent.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","appBarStyles","backgroundColor","typographyStyles","flex","Navbar","classes","AppBar","position","className","Toolbar","Typography","columns","theme","dataGrid","marginBottom","field","headerName","width","UserList","users","handleAccepter","handleDelete","useState","select","setSelection","style","height","margin","rows","pageSize","checkboxSelection","onSelectionModelChange","item","selectionModel","map","i","parseInt","ButtonGroup","color","aria-label","marginTop","Button","variant","marginRight","onClick","disabled","length","modal","display","alignItems","justifyContent","paper","palette","background","border","boxShadow","shadows","padding","spacing","formGroup","button","formTitle","textAlign","ReservationTypeComponent","resType","resErrMess","resIsLoading","addNewReservationType","updateNewReservationType","deleteReservationType","open","setOpen","openUpdate","setUpdateOpen","resTypeFormName","setResTypeFormName","resTypeFormSize","setResTypeFormSize","handleClose","handleInputNameChange","event","target","value","handleInputSizeChange","handleUpdateClose","Modal","onClose","aria-labelledby","aria-describedby","Fade","in","noValidate","autoComplete","onSubmit","preventDefault","FormGroup","Input","id","name","type","label","onChange","placeholder","reservationType","filter","res","firstReservationType","size","valueGetter","params","row","user","firstname","lastname","ReservationComponent","reservation","handleReservationDeletion","handleReservationAcceptation","App","setUsers","errMess","setErrMess","isLoading","setIsLoading","setResType","resTypeErrMess","setResTypeErrMess","resTypeIsLoading","setResTypeIsLoading","setReservation","setResIsLoading","setResErrMess","setRoles","setRoleErrMess","useEffect","fetch","then","json","usrs","catch","err","message","reserType","reservat","rols","console","log","Grid","container","xs","sm","marginLeft","ids","method","headers","body","JSON","stringify","response","result","Error","u","includes","responce","ok","statusCode","_","is_accepted","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18c1fb9d.chunk.js","sourcesContent":["import { AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport AcUnitIcon from '@material-ui/icons/AcUnit';\nimport {makeStyles} from '@material-ui/styles';\nimport React from \"react\";\n\nconst useStyles = makeStyles({\n  appBarStyles : {\n    backgroundColor: \"#000\"\n  },\n  typographyStyles: {\n    flex: 1\n  }\n})\n\nconst Navbar = () =>{\n  const classes = useStyles();\n  return(\n  <AppBar position=\"static\" className={classes.appBarStyles}>\n    <Toolbar>\n      <Typography className={classes.typographyStyles}>this is the Navbar</Typography>\n      <AcUnitIcon/>\n\n    </Toolbar>\n  </AppBar>\n  );\n}\n\n\n\nexport default Navbar;","import React, {useState} from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport {Button, ButtonGroup} from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  dataGrid: {\n    backgroundColor: \"#222\",\n    marginBottom: \"32px\"\n  }\n}))\n\nconst columns = [\n  { field: 'firstname', headerName: 'First Name', width: 250 },\n  { field: 'lastname', headerName: 'Last Name', width: 250 },\n  { field: 'email', headerName: 'Email', width: 400 },\n  { field: 'is_valid', headerName: 'Email verifier', width: 200 },\n];\n\n\n\nexport default function UserList({users, handleAccepter, handleDelete}) {\n  const [select, setSelection] = useState([]);\n  const classes = useState();\n\n\n\n\n  return (\n    <div style={{ height: 400, margin:'auto' }}>\n      <h2>Users list to accept : </h2>\n      \n      <DataGrid rows={users} columns={columns} pageSize={5} checkboxSelection \n          onSelectionModelChange={(item) =>setSelection(item.selectionModel.map(i => parseInt(i)))}\n          className={classes.dataGrid}\n        />\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\" style={{marginTop: '15px'}}>\n        <Button variant=\"contained\" color=\"secondary\" style={{marginRight: '15px'}} onClick={() => handleDelete(select)}\n          disabled={select.length > 0 ? false : true}>\n          delete\n        </Button>\n\n        <Button variant=\"contained\" color=\"primary\" onClick={() =>handleAccepter(select)}\n          disabled={select.length > 0 ? false : true}>\n          accepter\n        </Button>\n      </ButtonGroup> \n    </div>\n  );\n}\n","\nimport React, {useState} from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport {Button, ButtonGroup, Modal, Fade, FormGroup, Input} from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\n\nconst columns = [\n  { field: 'name', headerName: 'Reservation name', width: 200 },\n  { field: 'size', headerName: 'Reservation size', width: 200 },\n];\n\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    width: '375px'\n  },\n  formGroup: {\n    marginBottom: \"32px\",\n  },\n  button: {\n    backgroundColor: \"blue\",\n    color: \"#fff\"\n  },\n  formTitle: {\n    textAlign: \"center\"\n  }\n}));\n\n\n\nexport default function ReservationTypeComponent({resType, resErrMess, resIsLoading, addNewReservationType, updateNewReservationType, deleteReservationType}) {\n  const [select, setSelection] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [openUpdate, setUpdateOpen] = useState(false);\n  const classes = useStyles();\n  const [resTypeFormName, setResTypeFormName] = useState(\"\");\n  const [resTypeFormSize, setResTypeFormSize] = useState(0); \n\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleInputNameChange = (event) =>{\n    setResTypeFormName(event.target.value);\n  }\n\n  const handleInputSizeChange = (event) =>{\n    setResTypeFormSize(event.target.value);\n}\n  /** hanlde form submit */\n  const handleSubmit = (event) => {\n    addNewReservationType(resTypeFormName, resTypeFormSize, () => handleClose());\n    setResTypeFormName(\"\");\n    setResTypeFormSize(0);\n    event.preventDefault();\n  }\n\n  /** handle update pop up */\n  const handleUpdateOpen = () => {\n    setUpdateOpen(true);\n    if (select.length == 1) {\n      let id = select[0];\n      let reservationType = resType.filter(res => res.id === id);\n      let firstReservationType = reservationType.length == 1 ? reservationType[0]:null;\n      if (firstReservationType != null) {\n        setResTypeFormName(firstReservationType.name);\n        setResTypeFormSize(firstReservationType.size);\n      }\n    }\n  }\n\n  /** handle reservation type update */\n  const handleUpdateClose = () => {\n    setUpdateOpen(false);\n  }\n\n  /** nandle update submition */\n  const handleUpdateSubmit = (event) =>{\n    //let reservationType = {id: select[0], name: resTypeFormName, size: resTypeFormSize};\n    updateNewReservationType(select[0], resTypeFormName, resTypeFormSize, () => handleUpdateClose());\n    setResTypeFormName(\"\");\n    setResTypeFormSize(0);\n    event.preventDefault();\n  }\n\n\n\n  \n\n    if (resIsLoading) {\n        return (\n            <div>\n             reserbvation type is loading ....\n            </div>\n        );\n    }else if (resErrMess != null) {\n        return (\n            <div>\n                {resErrMess}\n            </div>\n        );\n    }\n  return (\n    <div style={{ height: 400, margin:'auto' }}>\n      <h2>Reservation Type : </h2>\n      \n      <DataGrid rows={resType} columns={columns} pageSize={5} checkboxSelection \n          onSelectionModelChange={(item) =>setSelection(item.selectionModel.map(i => parseInt(i)))}\n        />\n\n    <Modal\n        open={open}\n        className={classes.modal}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n          <Fade in={open} className={classes.paper}>\n          <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n            <div className={classes.formTitle}>\n              <h3>add Reservation Type</h3>\n            </div>\n            <FormGroup className={classes.formGroup}>\n              <Input id=\"standard-basic2\" name=\"name\" type=\"text\" label=\"name\" value={resTypeFormName}\n                onChange={handleInputNameChange} placeholder=\"reservation type name\"/>\n            </FormGroup>\n            <FormGroup className={classes.formGroup}>\n              <Input id=\"standard-basic\" label=\"Size\" name=\"size\" value = {resTypeFormSize} \n                type=\"number\" onChange={handleInputSizeChange} placeholder=\"reservation type size\"/>\n            </FormGroup>\n            <FormGroup className={classes.button}>\n              <Button type=\"submit\" color=\"inherit\">\n                add\n              </Button>\n            </FormGroup>\n        </form>\n        </Fade>\n      </Modal>\n      {/** update modal */}\n      <Modal\n        open={openUpdate}\n        className={classes.modal}\n        onClose={handleUpdateClose}\n\n      >\n          <Fade in={openUpdate} className={classes.paper}>\n          <form noValidate autoComplete=\"off\" onSubmit={handleUpdateSubmit}>\n            <div className={classes.formTitle}>\n              <h3>update Reservation Type</h3>\n            </div>\n            <FormGroup className={classes.formGroup}>\n              <Input id=\"standard-basic2\" name=\"name\" type=\"text\" label=\"name\" value={resTypeFormName}\n                onChange={handleInputNameChange} placeholder=\"reservation type name\"/>\n            </FormGroup>\n            <FormGroup className={classes.formGroup}>\n              <Input id=\"standard-basic\" label=\"Size\" name=\"size\" value = {resTypeFormSize} \n                type=\"number\" onChange={handleInputSizeChange} placeholder=\"reservation type size\"/>\n            </FormGroup>\n            <FormGroup className={classes.button}>\n              <Button type=\"submit\" color=\"inherit\">\n                add\n              </Button>\n            </FormGroup>\n        </form>\n        </Fade>\n      </Modal>\n\n        <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\" style={{marginTop: '15px'}}>\n          <Button variant=\"contained\" color=\"secondary\" style={{marginRight: '15px'}}\n            disabled={select.length > 0 ? false : true} onClick={() => deleteReservationType(select)}>\n            delete\n          </Button>\n          <Button variant=\"contained\" color=\"primary\" style={{marginRight: '15px'}} onClick={handleOpen}>\n              add\n          </Button>\n          <Button variant=\"contained\" color=\"default\" style={{marginRight: '15px'}} disabled={select.length == 1 ? false : true} onClick={handleUpdateOpen}>\n              UPDATE\n          </Button>\n        </ButtonGroup> \n        \n    </div>\n  );\n}\n","import React, {useState} from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport {Button, ButtonGroup} from \"@material-ui/core\";\n\nconst columns = [\n  { field: 'date', headerName: 'Date', width: 250 },\n  { field: 'is_accepted', headerName: 'Reservation accepter', width: 250 },\n  { field: 'user', headerName: 'Owner', width: 300, valueGetter: (params) => params.row.user.firstname + \" \" + params.row.user.lastname},\n];\n\n\n\nexport default function ReservationComponent({reservation, resIsLoading, resErrMess, handleReservationDeletion, handleReservationAcceptation}) {\n  const [select, setSelection] = useState([]);\n\n\n\n  if (resIsLoading) {\n    return (\n      <div>reservation is Loading...</div>\n    );\n  }\n  else if (resErrMess != null) {\n    return(\n      <div>{resErrMess}</div>\n    );\n  }\n\n  return (\n    <div style={{ height: 400, margin:'auto' }}>\n      <h2>Reservation List: </h2>\n      \n      \n      <DataGrid rows={reservation} columns={columns} pageSize={5} checkboxSelection \n          onSelectionModelChange={(item) =>setSelection(item.selectionModel.map(i => parseInt(i)))}\n        />\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\" style={{marginTop: '15px'}} >\n       <Button variant=\"contained\" color=\"secondary\" style={{marginRight: '15px'}} \n          disabled={select.length > 0 ? false : true} onClick={() =>handleReservationDeletion(select)}>\n          delete\n        </Button>\n  \n\n        <Button variant=\"contained\" color=\"primary\"\n          disabled={select.length > 0 ? false : true} onClick={() =>handleReservationAcceptation(select)}>\n          accepter\n        </Button>\n      </ButtonGroup> \n    </div>\n  );\n}\n","import './App.css';\nimport Navbar from './component/Navbar';\nimport Grid from '@material-ui/core/Grid';\nimport UserList from './component/UserList';\nimport React, { useEffect, useState } from 'react';\nimport ReservationTypeComponent from \"./component/ReservationTypeComponent\";\nimport Reservation from \"./component/ReservationComponent\";\n\n\nfunction App()  {\n  const [users, setUsers] = useState([]);\n  const [errMess, setErrMess] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const [resType, setResType] = useState([]);\n  const [resTypeErrMess, setResTypeErrMess] = useState(null);\n  const [resTypeIsLoading, setResTypeIsLoading] = useState(true);\n\n  const [reservation, setReservation] = useState([]);\n  const [resIsLoading, setResIsLoading] = useState(true);\n  const [resErrMess, setResErrMess] = useState(null);\n\n  const [roles, setRoles] = useState([]);\n  const [roleErrMess, setRoleErrMess] = useState(null);\n\n\n  /**update type */\n  const updateNewReservationType = (id, name, size, handleUpdateClose) => {\n    fetch(\"http://localhost:8080/api/reservationType\", {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: id,\n        name: name,\n        size: size\n      })\n    })\n    .then(response => response.json())\n    .then(result => {\n      handleUpdateClose();\n        console.log(\"res type accepter\");\n        console.log(result);\n        setResType(resType.filter(type => {\n          if (type.id === id) {\n              type.name = name;\n              type.size = size;\n          }\n          return type;\n        }));\n      })\n      .catch(err => {\n        handleUpdateClose();\n        console.log(err);\n      \n      }\n    );\n  }\n\n  /** delete reservation type */\n  const deleteReservationType = (ids) => {\n    console.log(\"here is delete res type\");\n    fetch(\"http://localhost:8080/api/reservationType\", {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(ids)\n    })\n    .then(responce => {\n      if (responce.ok) {\n        console.log(\"this is something is ok\");\n        return responce.json()\n      }\n      throw new Error(\"sorry but something went wrong \" + responce.statusCode);\n    })\n    .then(_ => {\n      console.log(\"here is result section\");\n        setResType(resType.filter(type => {\n          if (!ids.includes(type.id)) {\n            return type;\n          }\n        }));\n    })\n      .catch(err => {\n        console.log(\"error \" + err);\n      \n      }\n    );\n  }\n\n  /**reservation type */\n  const addNewReservationType = (name, size, handleClose) => {\n    fetch(\"http://localhost:8080/api/reservationType\", {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: name,\n        size: size\n      })\n    })\n    .then(response => response.json())\n    .then(result => {\n        handleClose();\n        console.log(\"res type accepter\");\n        console.log(result);\n        setResType([...resType, result]);\n      })\n      .catch(err => {\n        console.log(err);\n        handleClose();\n      }\n    );\n  }\n  /** end reservation type */\n  const handleDelete = (ids) =>{\n    fetch(\"http://localhost:8080/api/waitUsers\", {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(ids)\n    })\n    .then(response => response.json())\n    .then(result => {\n        console.log(\"deleted\", result);\n        if (result) {\n          setUsers(users.filter(u => !ids.includes(u.id)))\n        }else {\n          throw Error(\"delete is not performed\");\n        }\n      })\n      .catch(err => console.log(err)\n    );\n    \n  }\n\n  const handleAccepter = (ids) =>{\n    console.log(\"accpter users is invoked\");\n    fetch(\"http://localhost:8080/api/waitUsers\", {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(ids)\n    })\n    .then(response => response.json())\n    .then(result => {\n        console.log(\"accepted\", result);\n        if (result) {\n          setUsers(users.filter(u => !ids.includes(u.id)))\n        }else {\n          throw Error(\"accpter is not performed\");\n        }\n      })\n      .catch(err => console.log(err)\n    );\n  }\n\n  /** handle acceptation of the reservation */\n  const handleReservationAcceptation = (ids) => {\n    fetch(\"http://localhost:8080/api/reservation\", {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(ids)\n    })\n    .then(response => response.json())\n    .then(_ => {\n          setReservation(reservation.filter(res =>{\n            if(ids.includes(res.id)) {\n                res.is_accepted = true;\n            }\n            return res;\n          }));\n      })\n      .catch(err => console.log(err)\n    );\n  }\n\n  /** handle deletion of the reservation */\n      /** delete users reservation */\n      const handleReservationDeletion = (ids) => {\n        fetch(\"http://localhost:8080/api/reservation\", {\n          method: 'DELETE',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(ids)\n        })\n        .then(response => response.json())\n        .then(_ => {\n          setReservation(reservation.filter(res => {\n            if(!ids.includes(res.id)) {\n                return res;\n            }\n          }));\n          })\n          .catch(err => console.log(err)\n        );\n      }\n\n\n  useEffect(() => {\n      fetch(\"http://localhost:8080/api/waitUsers\")\n      .then((res) => {\n          return res.json();\n      }).then((usrs) =>{\n        setIsLoading(false);\n        setUsers(usrs)\n      }).catch(err => {\n        setIsLoading(false);\n        setErrMess(err.message);\n      });\n\n      fetch(\"http://localhost:8080/api/reservationType\")\n      .then((res) =>{\n        return res.json();\n      }).then((reserType) =>{\n        setResTypeIsLoading(false);\n        setResType(reserType);\n      }).catch((err) =>{\n        setResTypeIsLoading(false);\n        setResTypeErrMess(err.message);\n      })\n\n      fetch(\"http://localhost:8080/api/reservation\")\n      .then((res) =>{\n        return res.json();\n      }).then((reservat) =>{\n        setResIsLoading(false);\n        setReservation(reservat);\n      }).catch((err) =>{\n        setResIsLoading(false);\n        setResErrMess(err.message);\n      })\n\n      fetch(\"http://localhost:8080/api/role\")\n      .then((res) =>{\n        return res.json();\n      }).then((rols) =>{\n        console.log(rols);\n        setRoles(rols);\n      }).catch((err) =>{\n        setRoleErrMess(err.message);\n      })\n  },\n    //the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n  [])\n\n    if (isLoading) {\n      return (\n        <div>Loading ..... </div>\n      )\n    }\n    else if (errMess !== null) {\n      return (\n        <div>Error: {errMess}</div>\n      );\n    }\n    return(\n      \n      <Grid container>\n        <Grid item xs={12}>\n          <Navbar/>\n        </Grid>\n        <Grid item container>\n          <Grid item sm={1} xs={0} />\n          <Grid item sm={10} xs={12} container>\n              <Grid item sm={10} style={{marginLeft: 'auto', marginRight: \"auto\", marginBottom: \"20px\"}}>\n                  <UserList users={users} handleAccepter={handleAccepter} handleDelete={handleDelete} />\n              </Grid>\n              <Grid item sm={10} style={{marginLeft: 'auto', marginRight: \"auto\", marginTop: \"72px\", marginBottom: \"20px\"}}>\n                <ReservationTypeComponent resType={resType} resErrMess={resTypeErrMess}\n                  resIsLoading={resTypeIsLoading} setResType={setResType} addNewReservationType={addNewReservationType}\n                  updateNewReservationType={updateNewReservationType} deleteReservationType={deleteReservationType}/>\n              </Grid>\n              <Grid item sm={10} style={{marginLeft: 'auto', marginRight: \"auto\", marginTop: \"72px\"}}>\n                <Reservation reservation={reservation} resIsLoading={resIsLoading} resErrMess={resErrMess}\n                  handleReservationAcceptation={handleReservationAcceptation}\n                  handleReservationDeletion={handleReservationDeletion}\n                  />\n              </Grid>\n          </Grid>\n          <Grid item sm={1} xs={0}/>\n        </Grid>\n      </Grid>\n    );\n  }\n\n\nexport default App;\n\n/**handleReservationDeletion={handleReservationDeletion} */\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}